// Generated by gencpp from file rct_ahr_arm_controller/GripperLevel.msg
// DO NOT EDIT!


#ifndef RCT_AHR_ARM_CONTROLLER_MESSAGE_GRIPPERLEVEL_H
#define RCT_AHR_ARM_CONTROLLER_MESSAGE_GRIPPERLEVEL_H

#include <ros/service_traits.h>


#include <rct_ahr_arm_controller/GripperLevelRequest.h>
#include <rct_ahr_arm_controller/GripperLevelResponse.h>


namespace rct_ahr_arm_controller
{

struct GripperLevel
{

typedef GripperLevelRequest Request;
typedef GripperLevelResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GripperLevel
} // namespace rct_ahr_arm_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rct_ahr_arm_controller::GripperLevel > {
  static const char* value()
  {
    return "9bbabac6ffdd13f3189cf0e18b7cfd5e";
  }

  static const char* value(const ::rct_ahr_arm_controller::GripperLevel&) { return value(); }
};

template<>
struct DataType< ::rct_ahr_arm_controller::GripperLevel > {
  static const char* value()
  {
    return "rct_ahr_arm_controller/GripperLevel";
  }

  static const char* value(const ::rct_ahr_arm_controller::GripperLevel&) { return value(); }
};


// service_traits::MD5Sum< ::rct_ahr_arm_controller::GripperLevelRequest> should match
// service_traits::MD5Sum< ::rct_ahr_arm_controller::GripperLevel >
template<>
struct MD5Sum< ::rct_ahr_arm_controller::GripperLevelRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rct_ahr_arm_controller::GripperLevel >::value();
  }
  static const char* value(const ::rct_ahr_arm_controller::GripperLevelRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rct_ahr_arm_controller::GripperLevelRequest> should match
// service_traits::DataType< ::rct_ahr_arm_controller::GripperLevel >
template<>
struct DataType< ::rct_ahr_arm_controller::GripperLevelRequest>
{
  static const char* value()
  {
    return DataType< ::rct_ahr_arm_controller::GripperLevel >::value();
  }
  static const char* value(const ::rct_ahr_arm_controller::GripperLevelRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rct_ahr_arm_controller::GripperLevelResponse> should match
// service_traits::MD5Sum< ::rct_ahr_arm_controller::GripperLevel >
template<>
struct MD5Sum< ::rct_ahr_arm_controller::GripperLevelResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rct_ahr_arm_controller::GripperLevel >::value();
  }
  static const char* value(const ::rct_ahr_arm_controller::GripperLevelResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rct_ahr_arm_controller::GripperLevelResponse> should match
// service_traits::DataType< ::rct_ahr_arm_controller::GripperLevel >
template<>
struct DataType< ::rct_ahr_arm_controller::GripperLevelResponse>
{
  static const char* value()
  {
    return DataType< ::rct_ahr_arm_controller::GripperLevel >::value();
  }
  static const char* value(const ::rct_ahr_arm_controller::GripperLevelResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RCT_AHR_ARM_CONTROLLER_MESSAGE_GRIPPERLEVEL_H
